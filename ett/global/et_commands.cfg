######################################################
## Customized notification commands
################################################
define command {
    command_name   notify-by-html-email
    command_line   $USER1$/notify-html-email.pl https://monitoring.wh.reachlocal.com/nagios
}

define command {
    command_name   notify-host-by-graph-email
    command_line   $USER1$/pnp4n_send_host_mail.pl -f multi -u
}

define command {
    command_name   notify-service-by-graph-email
    command_line   $USER1$/pnp4n_send_service_mail.pl -f multi -u 
}

define command {
    command_name   notify-host-by-graph-email-jp
    command_line   $USER1$/pnp4n_send_host_mail.pl -f multi -u -l jp
}

define command {
    command_name   notify-service-by-graph-email-jp
    command_line   $USER1$/pnp4n_send_service_mail.pl -f multi -u -l jp
}

###################################################
## Basic port checks, customized by ETT
###################################################

# 'check_https' command definition
define command{
        command_name    check_https
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 443
        }
# 'et_check_mysql' command definition
define command{
        command_name    et_check_mysql
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 3306
        }

define command{
	command_name	check_mysqldb
	command_line	$USER1$/check_mysqld.pl -H $HOSTADDRESS$ -u $USER4$ -p $USER5$ -a uptime,threads_connected,questions,slow_queries,open_tables -w ',,,,' -c ',,,,' -A $USER21$ -f
}

# 'check_cassandra' command definition
define command{
        command_name    check_cassandra
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 7000
        }

# 'check_cassandra_9160' command definition
define command{
        command_name    check_cassandra_9160
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 9160
        }

# 'check_8080' command definition
define command{
        command_name    check_8080
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 8080
        }

define command{
	command_name	check_8443
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p 8443
	}

# 'et_check_ldap' command definition
define command{
        command_name    et_check_ldap
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 389
        }

# 'check_ldaps' command definition
define command{
        command_name    check_ldaps
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 636
        }

# 'check_mssql' command definition
define command{
        command_name    check_mssql
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 1433
        }

# 'check_oracledb' command definition
define command{
        command_name    check_oracledb
        command_line    $USER1$/negate -c OK -w OK  $USER1$/check_tcp -H $HOSTADDRESS$ -p 1521
        }

define command{	
	command_name	et_check_dummy
	command_line	$USER1$/check_dummy $ARG1$ $ARG2$
	}

define command{
	command_name	check_mx8_load
	command_line    $USER1$/check_mx8_load.sh
}

##############################################################################
# The following commands rely on the NRPE agent install on the host
#
#############################################################################

define command {
	command_name	et_win_check_webpage_content
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -t 30 -c check_webpagecontent -a "$ARG1$" "$ARG2$"
}

define command {
        command_name    et_check_nrpe_version
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$  
}

define command {
	command_name	et_check_drac_ip
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -t30 -c check_racip
	}


define command{
        command_name    et_check_zombie
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_zombie_procs
        }

# 'et_check_swap' command definition
define command {
        command_name    et_check_swap
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -t 30 -c et_check_swap -a $ARG1$ $ARG2$
}

# 'et_check_load' command definition
define command {
        command_name    et_check_load
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -t 30 -c et_check_load -a $ARG1$ $ARG2$
}

# 'et_check_disk' command definition
define command {
        command_name    et_check_disk
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -t 30 -c et_check_disk -a $ARG1$ $ARG2$ $ARG3$
}

define command {
	command_name	check_nagiostmpfs
	command_line	$USER1$/check_disk -w $ARG1$ -c $ARG2$ -p /nagiostmpfs  -m
}

# check_snmp_memory - Linux SNMP memory check with perfdata
define command {
	command_name	check_snmp_memory
	command_line	$USER1$/check_snmp_memory.pl -H $HOSTADDRESS$ -C r3@chf0r1t -2 -w $ARG1$ -c $ARG2$ -f -m
}

# works for linux and windows
define command {
	command_name	check_snmp_storage_usage
	command_line	$USER1$/check_snmp_storage_usage.sh r3@chf0r1t $HOSTADDRESS$ $ARG1$ $ARG2$
}

define command {
	command_name	check_snmp_vyatta_storage
	command_line    $USER1$/check_snmp_storage_usage.sh reach@sales199 $HOSTADDRESS$ $ARG1$ $ARG2$
}

define command {
	command_name	check_localdisk_io
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 18 -c check_localdisk_io -a $ARG1$ $ARG2$
}

##################################################################################
# The following relies on the NRPE agent and check_xenvm script to exist on the 
# remote system.  Additionally, nrpe user needs to have rights to run xm list.
# Used to get a list of running VMs on a freexen server.
##################################################################################

define command {
    command_name    check_hyperv_vms
    command_line    $USER1$/check_hyperv.sh $HOSTADDRESS$
}

define command {
    command_name    check_hyperv_perf
    command_line    $USER1$/check_hyperv_perf $HOSTADDRESS$ $ARG1$ $_HOSTVM_LIST$
}

define command {
    command_name    check_xenvm
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -t 30 -c check_xenvm -a $ARG1$ $ARG2$
}


#check_xenserver_sr.py POOLMASTER <username> <password> <SR Name> <WarningUsed%> <CriticalUsed%>
define command {
    command_name    check_xenserver_sr
    command_line    $USER1$/check_xenserver_sr.py $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$
}

define command {
    command_name    check_cpu
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -u -t 10 -p 5666 -c check_cpu 
}

define command {
    command_name    check_nfstats
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -t 15 -p 5666 -u -c check_nfstats
}

###################################################################################
# The following relies on the NSClient++ Agent and the check_timesync
# external script to be in %NSCLIENT%\scripts directory
####################################################################################

define command {
    command_name    et_check_timesync
    command_line    $USER1$/check_nrpe -H $HOSTNAME$ -t 30 -c check_timesync -a $ARG1$ $ARG2$ $ARG3$
}


####################################################################################
# Requires nrpe agent and check_xenstats to exist on the server being monitored
# et_check_xenstats numdoms|totmem|usedmem|freemem|domuload|usedmempct warnlevel critlevel
###################################################################################

define command {
    command_name    et_check_xenstats
    command_line    $USER1$/negate -w OK -c OK $USER1$/check_nrpe -H $HOSTNAME$ -t 30 -u -c check_xenstats -a $ARG1$ $ARG2$ $ARG3$
}

#####################################################################################
# Requires nrpe agent and check_windows_updates.ps1 to be installed on the windows system
# Takes no params
#####################################################################################

define command {
    command_name    et_check_winupdates
    command_line    $USER1$/check_nrpe -H $HOSTNAME$ -t 45 -c check_updates
}
# ./check_nrpe -H 10.10.26.25 -t 30 -c check_updates


################################################################################
# Windows EventLog Reader
# These commands rely on NSCLIENT++ and NRPE  
#
################################################################################

# ARG1: name of eventlog
# ARG2: Number of matching events that trigger a nagios warning
# ARG3: Number of matching events that trigger a nagios critical
# ARG4: Event Category (info, warning, error)

define command {
        command_name check_eventlog
        command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -p 5666 -t 45 -c CheckEventLog -a MaxWarn=$ARG2$ MaxCrit=$ARG3$ file=$ARG1$ filter=new filter+generated=\<1h filter+eventType==$ARG4$ filter=in filter=all unique descriptions "syntax=(%count%) %type% - %strings%"
}

define command {
        command_name check_lockedaccount
        command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -p 5666 -t 45 -c CheckEventLog -a MaxWarn=1 MaxCrit=1 file=security file=security filter=new filter+generated=\<1h filter+eventID==4740 filter=in filter=all truncate=4090 descriptions "syntax=Locked Account at %written% - %strings%"
}

define command {
	command_name	check_adrep
	command_line 	$USER1$/check_nrpe -H $HOSTADDRESS$ -p 5666 -t 30 -c check_adrep
	}
	
##########################################################
## Cusomized check_snmp definition
###########################################################
# Arg1 - OID
# Arg2 - Warn Limit
# Arg3 - Crit Limit
# Arg4 - Label
# Arg5 - Unit
# Arg6 - Version (1,2,3)
# 'et_check_snmp' command definition
define command{
        command_name    et_check_snmp
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ -o $ARG1$ -w $ARG2$ -c $ARG3$ -C r3@chf0r1t -l $ARG4$ -u $ARG5$ -P $ARG6$
        }
#check_snmp -H 10.10.26.3 -o .1.3.6.1.4.1.311.1.3.2.1.1.3.10.10.16.0 -w 5: -c 1: -C r3@chf0r1t -l "Free Leases" -u "leases" -P 1

##############################################################################
# The following commands rely on the NSClient++  agent install on the host
#
#############################################################################

# 'check_nt' command definition
define command{
	command_name	check_nt
	command_line	$USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v $ARG1$ $ARG2$
	}

define command{
	command_name check_nt_pagingfile
	command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\Paging File(_Total)\\% Usage","Paging File usage is %.2f %%" -w $ARG1$ -c $ARG2$
}

define command{
	command_name check_nt_DHCP_queue_length
	command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\DHCP Server\\Conflict Check Queue Length","Waiting in DHCP Queue due to Conflict is %.f" -w $ARG1$ -c $ARG2$
}

define command{
	command_name check_nt_DHCP_average_response_time
	command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\DHCP Server\\Milliseconds per packet (Avg).","Average DHCP Server Response in is %.f" -w $ARG1$ -c $ARG2$
}

define command{
	command_name check_nt_registry_quota_in_use
	command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\System\\% Registry Quota In Use","Percent Quota in use is %.2f %%" -w $ARG1$ -c $ARG2$
}

define command{
	command_name check_nt_mssql_database_files_size
	command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\SQLServer:Databases(_Total)\\Data File(s) Size (KB)","SQL Server Databases Datafile size total is %.f" -w $ARG1$ -c $ARG2$
}

define command{
	command_name check_nt_mssql_database_log_files_size
	command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\SQLServer:Databases(_Total)\\Log File(s) Size (KB)","SQL Server Databases Logfile size total %.f" -w $ARG1$ -c $ARG2$
}

define command{
	command_name check_nt_mssql_server_deadlocks_per_sec
	command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\SQLServer:Locks(_Total)\\Number of Deadlocks/sec","SQL Server Deadlocks per second total %.f" -w $ARG1$ -c $ARG2$
}

define command{
	command_name check_nt_mssql_server_connections
	command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\SQLServer:General Statistics\\User Connections","SQL Server Connections are %.f" -w $ARG1$ -c $ARG2$
}

define command{
        command_name check_nt_mssqlexp_database_files_size
        command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\MSSQL\$SQLEXPRESS:Databases(_Total)\\Data File(s) Size (KB)","SQL Server Databases Datafile size total is %.f" -w $ARG1$ -c $ARG2$
}

define command{
        command_name check_nt_mssqlexp_database_log_files_size
        command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\MSSQL\$SQLEXPRESS:Databases(_Total)\\Log File(s) Size (KB)","SQL Server Databases Logfile size total %.f" -w $ARG1$ -c $ARG2$
}

define command{
        command_name check_nt_mssqlexp_server_deadlocks_per_sec
        command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\MSSQL\$SQLEXPRESS:Locks(_Total)\\Number of Deadlocks/sec","SQL Server Deadlocks per second total %.f" -w $ARG1$ -c $ARG2$
}

define command{
        command_name check_nt_mssqlexp_server_connections
        command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\MSSQL\$SQLEXPRESS:General Statistics\\User Connections","SQL Server Connections are %.f" -w $ARG1$ -c $ARG2$
}

define command{
        command_name check_nt_ad_ldap_searches
        command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\NTDS\\LDAP Searches/sec","LDAP Searches per Second %.f" -w $ARG1$ -c $ARG2$
}

define command{
        command_name check_nt_ad_ldap_bindtime
        command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\NTDS\\LDAP Bind Time","%.f"
}

define command{
        command_name check_nt_ad_ldap_clientsessions
        command_line $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -t 30 -u -v COUNTER -l "\\NTDS\\LDAP Client Sessions","%.f"
}


#################################################################################
# The following commands rely on check_naf.py, check_netapp3.pl, or check_netappfiler.py
# being in place on the Nagios server
# loopfs_netappfiler is an adaptation of check_netappfiler that loops through a 
# range of volumes and collects stats
################################################################################

define command{
        command_name    check_netapp_ifstats
        command_line    /usr/local/nagios/libexec/check_netappfiler.py -H $HOSTADDRESS$ -s ifstat -V $ARG1$
        }

define command{
	command_name 	check_netapp_allsnaps
	command_line	$USER1$/check_netapp_df -H $HOSTADDRESS$ -C r3@chf0r1t -p 161 -m snapshot -w $ARG1$ -c $ARG2$ -T pu -f
}

define command{
        command_name    check_netapp_allvolumes
        command_line    $USER1$/check_netapp_df -H $HOSTADDRESS$ -C r3@chf0r1t -p 161 -m snapshot -w $ARG1$ -c $ARG2$ -T pu -e -f
}

define command{
	command_name	check_netapp_volumes
	command_line	/usr/local/nagios/libexec/loopfs_netappfiler.sh $HOSTNAME$ $ARG1$ $ARG2$ $ARG3$ $ARG4$
	}

define command{
	command_name	test_netapp_volumes
	command_line 	/usr/local/nagios/libexec/testnetappvolumes.sh $HOSTNAME$ $ARG1$ $ARG2$ $ARG3$ $ARG4$
	}

define command{
	command_name	check_netapp3_cpfulltime
	command_line	$USER1$/check_netapp3.pl -H $HOSTADDRESS$ -C r3@chf0r1t -v CPTIME
	}

define command{
	command_name	check_netapp3_cpbacktime
	command_line	$USER1$/check_netapp3.pl -H $HOSTADDRESS$ -C r3@chf0r1t -v CPBACK
	}

# 'check_netapp' command definition
define command{
	command_name	check_netapp
	command_line	/usr/local/nagios/libexec/check_naf.py -H $HOSTADDRESS$ -C r3@chf0r1t $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ 
	}

# 'check_netapp_io' command definition
define command{
	command_name	check_netapp_io
	command_line	$USER1$/check_naf.py -H $HOSTADDRESS$ -C r3@chf0r1t io
	}

# 'check_netapp_version' command definition
define command{
	command_name	check_netapp_version
	command_line	/usr/local/nagios/libexec/check_naf.py -H $HOSTADDRESS$ -C r3@chf0r1t version 
	}

# 'check_netapp_cpu' command definition
define command{
	command_name	check_netapp_cpu
	command_line	/usr/local/nagios/libexec/check_naf.py -H $HOSTADDRESS$ -C r3@chf0r1t cpu 
	}

# 'check_netapp_nvram' command definition
define command{
	command_name	check_netapp_nvram
	command_line	/usr/local/nagios/libexec/check_naf.py -H $HOSTADDRESS$ -C r3@chf0r1t nvram 
	}

# 'check_netapp_diskfailed' command definition
define command{
	command_name	check_netapp_diskfailed
	command_line	/usr/local/nagios/libexec/check_naf.py -H $HOSTADDRESS$ -C r3@chf0r1t disk,failed,0,0 
	}

# 'check_netapp_spare' command definition
define command{
	command_name	check_netapp_spare
	command_line	/usr/local/nagios/libexec/check_naf.py -H $HOSTADDRESS$ -C r3@chf0r1t disk,spare
	}

# 'check_netapp_global' command definition
define command{
	command_name	check_netapp_global
	command_line	/usr/local/nagios/libexec/check_naf.py -H $HOSTADDRESS$ -C r3@chf0r1t global 
	}

# 'check_netapp_aggr0' command definition
define command{
	command_name	check_netapp_aggr0
	command_line	/usr/local/nagios/libexec/check_naf.py -H $HOSTADDRESS$ -C r3@chf0r1t vol_data,aggr0,91%,95% 
	}

# 'check_netapp_aggr1' command definition
define command{
        command_name    check_netapp_aggr1
        command_line    /usr/local/nagios/libexec/check_naf.py -H $HOSTADDRESS$ -C r3@chf0r1t vol_data,aggr1,90%,95%
        }

define command{
        command_name    check_netapp_filer
        command_line    $USER1$/check_netappfiler.py -H $HOSTADDRESS$ -C r3@chf0r1t -P $ARG1$ -s $ARG2$
        }

define command{
	command_name	check_netapp_allvols
	command_line	$USER1$/check_netapp_allvols.pl -H $HOSTADDRESS$ -C r3@chf0r1t -v 2 -w $ARG1$ -c $ARG2$
	}

define command{
	command_name	check_netapp_nfsop
	command_line	$USER1$/check_netapp_nfsops.pl -H $HOSTADDRESS$ -C r3@chf0r1t -v 2 -P /tmp 
	}

#################################################################################
# The following commands rely on check_equallogic script being in place on the
# Nagios server and the Equallogic to have SNMP community string set
################################################################################

# 'check_equallogic' command definition
define command{
	command_name	check_equallogic
	command_line 	$USER1$/check_equallogic -H $HOSTADDRESS$ -C r3@chf0r1t -t $ARG2$ $ARG3$
}

define command{
        command_name    check_equallogic_volumes
        command_line    $USER1$/check_equallogic -H $HOSTADDRESS$ -C r3@chf0r1t -t $ARG2$ $ARG3$
}

#################################################################################
# The following commands rely on check_openmanmage being in place on the
# Nagios server, the OpenManage tools installed, and have SNMP community string set
################################################################################

# 'check_openmanage' command definition
#define command{
#	command_name 	check_openmanage
##	command_line 	$USER1$/check_openmanage -H $HOSTADDRESS$ -C r3@chf0r1t -b bat_charge=0:0 --only $ARG1$
#}

# 'check_openmanage' command definition
define command{
       command_name    check_openmanage
       command_line    $USER1$/check_openmanage -H $HOSTADDRESS$ -C r3@chf0r1t -t 70 --use-get_table -b ctrl_driver=all -b ctrl_fw=all -b bat_charge=0:0 -e -I -p
}

#################################################################################
# The following commands rely on siwtch_snmp_env_check.pl  being in place on the
# Nagios server, and have SNMP community string set on the switch
################################################################################

# 'check_foundry_env' command definition
define command{
        command_name    check_foundry_env
        command_line    $USER1$/switch_snmp_env_check.pl -H $HOSTADDRESS$ -C r3@chf0r1t -T foundry
}

####################################################################################
# Relies on SNMP commmunity string being set on the switch and the referenced script
####################################################################################

define command{
	command_name	check_snmp_free_interfaces
	command_line	$USER1$/check_snmp_free_interfaces.pl -H $HOSTADDRESS$ -C r3@chf0r1t -d 1 -w $ARG1$ -c $ARG2$
}

##############################################################################
# check_interfacetable is a plugin that discovers all ethernet ports on and device
# and automatically monitors.  Requires PNP4nagios and the package for 
# iterfacetable.
#########################################################################

### ARG1-comm string
### ARG2-SNMPVersion
### ARG3-comma separated list of excluded ports, wildcards accepted, regex-enabled, enclosed in ' 
### ARG4-warning %bandwidthused,numberoferrors,numberofdroppedpackets,
### ARG5-crit, same format
### ARG6-Calc interval in seconds (1.1*check_interval)

define command{
	command_name	check_interface_table
	command_line	$USER1$/check_interface_table_v3t.pl -H $HOSTADDRESS$ -C $ARG1$ -$ARG2$ --exclude $ARG3$ --track-property='ifAlias,ifOperStatus,ifStpState,ifVlanNames,ifIpInfo' --warning $ARG4$ --critical $ARG5$ -d $ARG6$ --timeout 60 -r -f
}

define command{
        command_name    check_interface_table_oracle
        command_line    $USER1$/check_interface_table_v3t.pl -H $HOSTADDRESS$ -C $ARG1$ -$ARG2$ --exclude $ARG3$ --warning $ARG4$ --critical $ARG5$ -d $ARG6$ --timeout 45 -r -f
}

define command{
        command_name    check_interface_table_sales
        command_line    $USER1$/check_interface_table_v3t.pl -H $HOSTADDRESS$ -C "reach@sales199" -$ARG1$ --exclude $ARG2$ --track-property='ifAlias,ifOperStatus,ifVlanNames,ifIpInfo' --warning $ARG3$ --critical $ARG4$ -d $ARG5$ --timeout 60 -r -f
}

define command{
        command_name    check_interface_table_v1
        command_line    $USER1$/check_interface_table_v3t.pl -H $HOSTADDRESS$ -C $ARG1$ --exclude $ARG2$ --warning $ARG3$ --critical $ARG4$ -d $ARG5$ --timeout 45 -r -f
}


####################################################################
# Basic netscaler health check
###################################################################

define command{
	command_name	check_netscaler_health
	command_line	$USER1$/check_netscaler_health.pl -H $HOSTADDRESS$ -C r3@chf0r1t -f
}

#
# Check SNMP netint - Checks SNMP data for any interface by SNMP description
# Does not alert
# returns perfdata
# writes a temp file to /tmp that must be owned by nagios:nagios
#
# ./check_snmp_mem.pl -H localhost -C public -w 70,60 -c 90,80 -f

define command{
        command_name    check_snmp_netint
        command_line    $USER1$/check_snmp_netint.pl -H $HOSTADDRESS$ -C r3@chf0r1t -n $ARG1$ -w 0,0,0,0,0,0 -c 0,0,0,0,0,0 -k -f -Y -z -M -B -d $ARG2$ -r
        }
#./check_snmp_netint.pl -H 172.30.1.1 -C public -n "PIX Firewall 'outside' interface" -w 0,0,0,0,0,0 -c 0,0,0,0,0,0 -k -f -Y -z -M -B -d $ARG1$ -r

define command{
        command_name    check_snmp_netint_sales
        command_line    $USER1$/check_snmp_netint.pl -H $HOSTADDRESS$ -C reach@sales199 -n $ARG1$ -w 0,0,0,0,0,0 -c 0,0,0,0,0,0 -k -f -Y -z -M -B -d $ARG2$ -r
        }

define command{
        command_name    check_snmp_netint_errors_sales
        command_line    $USER1$/check_snmp_netint.pl -H $HOSTADDRESS$ -C reach@sales199 -n $ARG1$ -w 0,0,0,0,0,0 -c 0,0,0,0,0,0 -P $SERVICEPERFDATA$ -T $LASTSERVICECHECK$ -pcount=4 -e -k -f -Y -z -M -B -d $ARG2$ -r
        }

define command{
	command_name	check_sales_load
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -t 30 -c et_check_load
	}

define command{
        command_name    check_sales_root
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -t 30 -c check_root
        }

define command{
        command_name    check_sales_varlog
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -t 30 -c check_varlog
        }

define command{
        command_name    check_sales_tmp
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -t 30 -c check_tmp
        }

define command{
	command_name	check_bind
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -t 20 -c check_bind_stats
	}

define command{
	command_name	check_apache2
	command_line	$USER1$/check_nrpe -H localhost -p 5666 -t 10 -c check_apache2
	}

define command {
       command_name    check_hostcount
       command_line    $USER1$/check_nagiostats.pl --hostcount
}

define command {
       command_name    check_servicecount
       command_line    $USER1$/check_nagiostats.pl --servicecount
}

define command {
       command_name    check_hostlatency
       command_line    $USER1$/check_nagiostats.pl -o -w $ARG1$ -c $ARG2$
}

define command {
       command_name    check_servicelatency
       command_line    $USER1$/check_nagiostats.pl -s -w $ARG1$ -c $ARG2$
}

define command {
        command_name    check_nagiostats
        command_line    $USER1$/check_nagiostats.sh
}

define command {
        command_name    check_inventory
        command_line    $USER1$/negate -t 45 -u OK -c OK -w OK -o OK $USER1$/check_nrpe -u -H $HOSTADDRESS$ -c check_inventory -t 45
}

define command {
        command_name    et-check_vip_snmp
        command_line    $USER1$/check_snmp -H $ARG6$ -P $ARG1$ -C r3@chf0r1t -o $ARG2$ -l $ARG3$ -w $ARG4$ -c $ARG5$
}

#EVENTHANDLER 
define command {
	command_name	restart-nagios
	command_line	$USER1$/eventhandlers/restart_nagios
}

define command {
	command_name	check_ruckus_aps
	command_line	$USER1$/check_ruckus_aps.pl -H $HOSTADDRESS$ -C r3@chf0r1t -2 -t 30 -w $ARG1$ -c $ARG2$
}

define command {
	command_name	fix_lax_plano_vpn
	command_line	/usr/local/nagios/bin/expect.sh
}

define command{
        command_name    check_oauth_token
        command_line    $USER1$/check_oauth_token.sh $ARG1$ $ARG2$ $HOSTDISPLAYNAME$
}

define command{
        command_name    check_oauth_validation
        command_line    $USER1$/check_oauth_validate.sh $HOSTDISPLAYNAME$
}

define command {
	command_name	test_handler
	command_line	/bin/echo "$(date)" >> /tmp/testevent.txt
}

define command {
	command_name	check_testping
	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -c check_testping
}

